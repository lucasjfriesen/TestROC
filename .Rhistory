root()
setwd("~/Desktop/Jamovi/TestROC")
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvcore::format
?jmvcore::format
jmvcore::format("{}%",99.9)
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
?||
?|
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
library(haven)
data <- read_sav("files/Gail Sensitivity Data.sav")
View(data)
x <- cutpointr::cutpointr(data$bditot, data$scidmdd)
x <- cutpointr::cutpointr(data$bditot, data$scidmdd, na.rm = T)
results <- x
confusionMatrix <- confusionMatrixForTable <- results$roc_curve[[1]]
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
View(results)
View(sensList)
jmvtools::install()
jmvcore::format("{}%", round(sensList, 2))
jmvcore::format("{}%", sensList)
jmvcore::format("{}%", round(list(sensList), 2))
jmvcore::format("{}%", list(round(sensList), 2))
for (i in sensList){
sensList[i] == format("{}%", round(i, 2))
}
sensList
for (i in sensList){
sensList[i] <- format("{}%", round(i, 2))
}
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
sensList
sensList[1]
sensList[[1]]
for (i in sensList){
sensList[i] <- format("{}%", i)
}
sensList
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
length(sensList)
for (i in 1:length(sensList)){
sensList[i] <- format("{}%", sensList[i])
}
jmvcore::format("{}%", round(sensList[1], 2))
jmvcore::format("{}%", round(sensList[[1], 2))
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
jmvcore::format("{}%", round(sensList[[1], 2))
jmvcore::format("{}%", round(sensList[[1], 2))
jmvcore::format("{}%", round(sensList[[1]], 2))
jmvcore::format("{}%", round(sensList[[2]], 2))
jmvcore::format("{}%", round(sensList[2], 2))
formatter <- function(x){
resToReturn = list()
for (i in 1:length(x)){
resToReturn[i] <- format("{}%", x[i])
}
resToReturn
}
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
formatter(sensList)
formatter <- function(x){
resToReturn = list()
for (i in 1:length(x)){
resToReturn[i] <- jmvcore::format("{}%", x[i])
}
resToReturn
}
formatter(sensList)
formatter <- function(x){
resToReturn = list()
for (i in 1:length(x)){
resToReturn[[i]] <- jmvcore::format("{}%", x[i])
}
resToReturn
}
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
formatter(sensList)
sensList <- formatter(sensList)
View(sensList)
formatter <- function(x){
resToReturn = list()
for (i in 1:length(x)){
resToReturn[[i]] <- jmvcore::format("{}%", round(x[i]), 2)
}
resToReturn
}
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
sensList <- formatter(sensList)
View(sensList)
View(sensList)
formatter <- function(x){
resToReturn = list()
for (i in 1:length(x)){
resToReturn[[i]] <- jmvcore::format("{}%", round(x[i], 2)
}
resToReturn
}
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
specList <-
(cutpointr::specificity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
ppvList <- (cutpointr::ppv(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
npvList <- (cutpointr::npv(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
youdenList <-
cutpointr::youden(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
)
resultsToReturn <- data.frame(
cutpoint = confusionMatrix$x.sorted,
sensitivity = jmvcore::format("{}%", round(sensList, 2)),
specificity = jmvcore::format("{}%", round(specList, 2)),
ppv = jmvcore::format("{}%", round(ppvList,2)),
npv = jmvcore::format("{}%", round(npvList,2)),
AUC = results$AUC,
youden = youdenList
)
# self$results$debug$setContent(list(resultsToReturn, resultsToDisplay))
table <- self$results$resultsTable
for (row in resultsToDisplay) {
table$addRow(rowKey = row, value = resultsToReturn[resultsToReturn$cutpoint == row,])
}
# Plotting Data ----
if (self$options$plotROC){
image <- self$results$plotROC
image$setState(resultsToReturn)
}
},
.plotROC = function(image, ggtheme, theme,...) {
if ((is.null(self$options$classVar) ||
is.null(self$options$dependentVar)) & self$options$plotROC == TRUE) {
return()
}
plotData <- data.frame(image$state)
plot <- ggplot2::ggplot(plotData, ggplot2::aes(x = 1 - specificity, y = sensitivity)) +
ggplot2::geom_point() +
ggplot2::geom_line() +
ggplot2::geom_smooth() +
ggtheme + ggplot2::theme(plot.title = ggplot2::element_text(margin=ggplot2::margin(b = 5.5 * 1.2)),
plot.margin = ggplot2::margin(5.5, 5.5, 5.5, 5.5))
print(plot)
TRUE
}
)
formatter <- function(x){
resToReturn = list()
for (i in 1:length(x)){
resToReturn[[i]] <- jmvcore::format("{}%", round(x[i], 2))
}
resToReturn
}
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
sensList <- formatter(sensList)
round(.5 2)
round(.5, 2)
?round
signif(.5, 2)
sensList <-
formatter((cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100))
sensList
sensList <-
as.numeric(formatter((cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)))
jmvtools::install()
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
View(sensList)
jmvtools::install()
jmvtools::install()
jmvtools::install()
formatter <- function(x){
resToReturn = list()
for (i in 1:length(x)){
resToReturn[[i]] <- jmvcore::format("{}%", round(x[i], 2))
}
resToReturn
}
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
sensList <- formatter(sensList)
specList <-
(cutpointr::specificity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
specList <- formatter(specList)
ppvList <- (cutpointr::ppv(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
ppvList <- formatter(ppvList)
npvList <- (cutpointr::npv(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
npvList <- formatter(npvList)
youdenList <-
cutpointr::youden(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
)
resultsToReturn <- data.frame(
cutpoint = confusionMatrix$x.sorted,
sensitivity = sensList,
specificity = specList,
ppv = ppvList,
npv = npvList,
AUC = results$AUC,
youden = youdenList
)
formatter <- function(x){
resToReturn = list()
for (i in 1:length(x)){
resToReturn[i] <- jmvcore::format("{}%", round(x[i], 2))
}
resToReturn
}
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
sensList <- formatter(sensList)
View(sensList)
x = 99
x
x[1]
x[2]
x[2] = 3
x = numeric()
formatter <- function(x){
resToReturn = numeric()
for (i in 1:length(x)){
resToReturn[[i]] <- jmvcore::format("{}%", round(x[i], 2))
}
resToReturn
}
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
sensList <- formatter(sensList)
formatter <- function(x){
resToReturn = numeric()
for (i in 1:length(x)){
resToReturn[[i]] <- jmvcore::format("{}%", round(x[i], 2))
}
resToReturn
}
jmvtools::
sensList <-
(cutpointr::sensitivity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
sensList <- formatter(sensList)
specList <-
(cutpointr::specificity(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
specList <- formatter(specList)
ppvList <- (cutpointr::ppv(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
ppvList <- formatter(ppvList)
npvList <- (cutpointr::npv(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
) * 100)
npvList <- formatter(npvList)
youdenList <-
cutpointr::youden(
tp = confusionMatrix$tp,
fp = confusionMatrix$fp,
tn = confusionMatrix$tn,
fn = confusionMatrix$fn
)
resultsToReturn <- data.frame(
cutpoint = confusionMatrix$x.sorted,
sensitivity = sensList,
specificity = specList,
ppv = ppvList,
npv = npvList,
AUC = results$AUC,
youden = youdenList
)
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
library(jmvcore)
Table
Table$public_fields
Table
Table$get_inherit()
jmvtools::install()
jmvcore::OptionArray
jmvcore::Table
?initialize()
initialize(Table)
x <- initialize(Table)
x
x <- initialize(Table, name = "A table")
x <- initialize(jmvcore::Table, name = "A table")
jmvcore::Table
?Table
x <- initialize(class = "Table")
x <- initialize(class = "Table", name = "Bob")
??Table
Table
jmvtools::install()
jmvtools::install()
jmvtools::install()
Options
?cutpointR
??cutpointR
results <- cutpointr::cutpointr(data$bditot, data$scidmdd, break_ties = c)
results <- cutpointr::cutpointr(data$bditot, data$scidmdd, break_ties = c, na.rm= T)
results
results <- cutpointr::cutpointr(data$bditot, data$scidmdd, break_ties = "c", na.rm= T)
results <- cutpointr::cutpointr(data$bditot, data$scidmdd, break_ties = c, na.rm= T)
View(results)
results <- cutpointr::cutpointr(data$bditot, data$scidmdd, break_ties = mean, na.rm= T)
View(results)
results$optimal_cutpoint
sort(unlist(results$optimal_cutpoint))
confusionMatrix <- confusionMatrixForTable <- results$roc_curve[[1]]
tol_metric = 1e-06
tol_metric
tol_metric > 0
jmvtools::install()
jmvtools::install()
jmvtools::install()
length(100)
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
?geom_smooth
??geom_smooth
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
?ggtitle
jmvtools::install()
labs
?labs
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
jmvtools::install()
